{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","currentInputValue","items","name","quantity","_nextProps","nextState","this","Object","is","id","newState","assign","setState","e","preventDefault","trim","push","className","map","item","idx","onMouseDown","add","disabled","remove","onSubmit","addItem","type","value","onChange","target","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAGqBA,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,kBAAmB,GACnBC,MAAO,CACL,CAAEC,KAAM,YAAaC,SAAU,GAC/B,CAAED,KAAM,YAAaC,SAAU,KANvB,E,yDAWd,SAAsBC,EAAYC,GAAY,IACtCN,EAAUO,KAAVP,MAEN,OAAQQ,OAAOC,GAAGT,EAAOM,K,iBAG3B,SAAII,GACF,IAAIC,EAAWH,OAAOI,OAAO,GAAIL,KAAKP,OACtCW,EAAST,MAAMQ,GAAIN,UAAY,EAC/BG,KAAKM,SAASF,K,oBAEhB,SAAOD,GACL,GAAIH,KAAKP,MAAME,MAAMQ,GAAIN,SAAW,EAAG,CACrC,IAAIO,EAAWH,OAAOI,OAAO,GAAIL,KAAKP,OACtCW,EAAST,MAAMQ,GAAIN,UAAY,EAE/BG,KAAKM,SAASF,M,qBAIlB,SAAQG,GAKN,GAJAA,EAAEC,mBAE0BR,KAAKP,MAAMC,kBAAkBe,OAEzD,CAEA,IAAIL,EAAWH,OAAOI,OAAO,GAAIL,KAAKP,OAEtCW,EAAST,MAAMe,KAAK,CAClBd,KAAMQ,EAASV,kBACfG,SAAU,IAGZG,KAAKM,SAASF,M,oBAGhB,WAAU,IAAD,OACP,OACE,qBAAKO,UAAU,MAAf,SACE,qBAAKR,GAAG,YAAR,SACE,sBAAKA,GAAG,gBAAR,UAEIH,KAAKP,MAAME,MAAMiB,KAAI,SAACC,EAAMC,GAAP,OACnB,sBAAKH,UAAU,oBAAf,UACE,oBAAIR,GAAG,YAAP,SAAoBU,EAAKjB,OACzB,sBAAKe,UAAU,UAAf,UACE,wBAAQA,UAAU,iBAAiBI,YAAa,kBAAM,EAAKC,IAAIF,IAA/D,eACA,sBAAMX,GAAG,WAAWc,UAAQ,EAA5B,SAA8BJ,EAAKhB,WACnC,wBAAQc,UAAU,iBAAiBI,YAAa,kBAAM,EAAKG,OAAOJ,IAAMG,SAAUJ,EAAKhB,UAAY,EAAnG,oBALoCiB,MAW5C,uBAAMX,GAAG,iBAAiBgB,SAAU,SAACZ,GAAD,OAAO,EAAKa,QAAQb,IAAxD,UACE,uBAAOc,KAAK,OAAOC,MAAOtB,KAAKP,MAAMC,kBAAmB6B,SAAU,SAAChB,GAAD,OAAO,EAAKD,SAAS,CAAEZ,kBAAmBa,EAAEiB,OAAOF,WACrH,wBAAQD,KAAK,SAAb,+B,GArEmBI,a,OCSlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8b7b6c25.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentInputValue: \"\",\n      items: [\n        { name: 'Product 1', quantity: 4 },\n        { name: 'Product 2', quantity: 7 }\n      ],\n    }\n  }\n\n  shouldComponentUpdate(_nextProps, nextState) {\n    var { state } = this;\n\n    return !Object.is(state, nextState);\n  }\n\n  add(id) {\n    let newState = Object.assign({}, this.state)\n    newState.items[id].quantity += 1\n    this.setState(newState)\n  }\n  remove(id) {\n    if (this.state.items[id].quantity > 0) {\n      let newState = Object.assign({}, this.state)\n      newState.items[id].quantity -= 1\n\n      this.setState(newState)\n    }\n  }\n\n  addItem(e) {\n    e.preventDefault();\n\n    const isProductNameEmpty = !this.state.currentInputValue.trim()\n\n    if (isProductNameEmpty) return;\n\n    let newState = Object.assign({}, this.state)\n\n    newState.items.push({\n      name: newState.currentInputValue,\n      quantity: 1\n    })\n\n    this.setState(newState)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"Container\">\n          <div id=\"ContainerList\">\n            {\n              this.state.items.map((item, idx) =>\n                <div className=\"ContainerListItem\" key={idx}>\n                  <h4 id=\"ItemTitle\">{item.name}</h4>\n                  <div className=\"buttons\">\n                    <button className=\"cursor_pointer\" onMouseDown={() => this.add(idx)}>+</button>\n                    <span id=\"quantity\" disabled>{item.quantity}</span>\n                    <button className=\"cursor_pointer\" onMouseDown={() => this.remove(idx)} disabled={item.quantity <= 0}>-</button>\n                  </div>\n                </div>\n              )\n            }\n\n            <form id=\"InputContainer\" onSubmit={(e) => this.addItem(e)}>\n              <input type=\"text\" value={this.state.currentInputValue} onChange={(e) => this.setState({ currentInputValue: e.target.value })} />\n              <button type=\"submit\">Add</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}