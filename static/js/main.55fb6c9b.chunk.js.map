{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","currentInputValue","items","name","quantity","id","this","setState","e","preventDefault","trim","push","className","map","item","idx","onMouseDown","add","disabled","remove","onSubmit","addItem","type","value","onChange","target","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAGqBA,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,kBAAmB,GACnBC,MAAO,CACL,CAAEC,KAAM,YAAaC,SAAU,GAC/B,CAAED,KAAM,YAAaC,SAAU,KANvB,E,uCAWd,SAAIC,GACFC,KAAKN,MAAME,MAAMG,GAAID,UAAY,EACjCE,KAAKC,SAASD,KAAKN,S,oBAErB,SAAOK,GACDC,KAAKN,MAAME,MAAMG,GAAID,SAAW,IAClCE,KAAKN,MAAME,MAAMG,GAAID,UAAY,GAEnCE,KAAKC,SAASD,KAAKN,S,qBAGrB,SAAQQ,GACNA,EAAEC,iBAEGH,KAAKN,MAAMC,kBAAkBS,SAElCJ,KAAKN,MAAME,MAAMS,KAAK,CACpBR,KAAMG,KAAKN,MAAMC,kBACjBG,SAAU,IAGZE,KAAKC,SAASD,KAAKN,U,oBAGrB,WAAU,IAAD,OACP,OACE,qBAAKY,UAAU,MAAf,SACE,qBAAKP,GAAG,YAAR,SACE,sBAAKA,GAAG,gBAAR,UAEIC,KAAKN,MAAME,MAAMW,KAAI,SAACC,EAAMC,GAAP,OACnB,sBAAKH,UAAU,oBAAf,UACE,oBAAIP,GAAG,YAAP,SAAoBS,EAAKX,OACzB,sBAAKS,UAAU,UAAf,UACE,wBAAQA,UAAU,iBAAiBI,YAAa,kBAAM,EAAKC,IAAIF,IAA/D,eACA,sBAAMV,GAAG,WAAWa,UAAQ,EAA5B,SAA8BJ,EAAKV,WACnC,wBAAQQ,UAAU,iBAAiBI,YAAa,kBAAM,EAAKG,OAAOJ,IAAMG,SAAUJ,EAAKV,UAAY,EAAnG,wBAMR,uBAAMC,GAAG,iBAAiBe,SAAU,SAACZ,GAAD,OAAO,EAAKa,QAAQb,IAAxD,UACE,uBAAOc,KAAK,OAAOC,MAAOjB,KAAKN,MAAMC,kBAAmBuB,SAAU,SAAChB,GAAD,OAAO,EAAKD,SAAS,CAAEN,kBAAmBO,EAAEiB,OAAOF,WACrH,uD,GAxDmBG,a,OCSlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.55fb6c9b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentInputValue: \"\",\n      items: [\n        { name: 'Product 1', quantity: 4 },\n        { name: 'Product 2', quantity: 7 }\n      ],\n    }\n  }\n\n  add(id) {\n    this.state.items[id].quantity += 1\n    this.setState(this.state)\n  }\n  remove(id) {\n    if (this.state.items[id].quantity > 0) {\n      this.state.items[id].quantity -= 1\n    }\n    this.setState(this.state)\n  }\n\n  addItem(e) {\n    e.preventDefault();\n\n    if (!this.state.currentInputValue.trim()) return;\n\n    this.state.items.push({\n      name: this.state.currentInputValue,\n      quantity: 1\n    })\n\n    this.setState(this.state)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"Container\">\n          <div id=\"ContainerList\">\n            {\n              this.state.items.map((item, idx) =>\n                <div className=\"ContainerListItem\">\n                  <h4 id=\"ItemTitle\">{item.name}</h4>\n                  <div className=\"buttons\">\n                    <button className=\"cursor_pointer\" onMouseDown={() => this.add(idx)}>+</button>\n                    <span id=\"quantity\" disabled>{item.quantity}</span>\n                    <button className=\"cursor_pointer\" onMouseDown={() => this.remove(idx)} disabled={item.quantity <= 0}>-</button>\n                  </div>\n                </div>\n              )\n            }\n\n            <form id=\"InputContainer\" onSubmit={(e) => this.addItem(e)}>\n              <input type=\"text\" value={this.state.currentInputValue} onChange={(e) => this.setState({ currentInputValue: e.target.value })} />\n              <button>Add</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}